name: Build Pipeline

on:
  push:
    branches:
      - main
      - dev
    # tags:
    #   - v[0-9]+.[0-9]+.[0-9]+

  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - "**"

  # schedule:
  #   - cron: "18 21 * * 6"

  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:
    inputs:
      create_release:
        description: Create a release
        required: false
        type: boolean

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration:
    name: Integration
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read # Needed to clone the repository

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - windows-latest
          # - macOS-latest
        deno-version:
          - 2.4.5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Setup Deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Check formatting, linting, license headers, types and run tests
        run: deno task validate

      - name: Generate coverage report
        run: deno task test:coverage-gen

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          name: ${{ matrix.os }}
          files: ./etc/coverage.lcov

  delivery:
    name: Delivery
    needs: integration
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: write # Needed to push the repository
      id-token: write # Needed for auth with Deno Deploy
      pages: write # Needed for updating GitHub Pages

    env:
      GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2
          # ref: main
          # token: ${{ secrets.GH_TOKEN }}

      - name: Setup Deno (latest)
        uses: denoland/setup-deno@v2

      # - name: Build step
      #   run: deno task build

      # - name: Upload to Deno Deploy
      #   uses: denoland/deployctl@v1
      #   with:
      #     project: c00l
      #     entrypoint: ./main.ts

      - name: Publish
        run: deno publish
